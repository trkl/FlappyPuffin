{"ast":null,"code":"import _classCallCheck from \"/Users/torkildjurhuus/Code/FlappyPuffin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torkildjurhuus/Code/FlappyPuffin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/torkildjurhuus/Code/FlappyPuffin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/torkildjurhuus/Code/FlappyPuffin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/torkildjurhuus/Code/FlappyPuffin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/torkildjurhuus/Code/FlappyPuffin/src/Resources/Games/FlappyBird/GameComponents/Floor.js\";\nimport React from \"react\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Game from \"../Game\";\nimport Vector from \"../../../../Vector/Vector\";\nimport EventManager from \"../../../../EventManager/EventManager\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\n\nvar Floor =\n/*#__PURE__*/\nfunction (_GameComponent) {\n  _inherits(Floor, _GameComponent);\n\n  function Floor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Floor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Floor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.children = [React.createElement(CollisionZone, {\n      dimensions: _this.props.dimensions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    })];\n\n    _this.collisionEvent = function (gameObject, force) {\n      return {\n        gameObject: gameObject,\n        physics: {\n          force: force\n        }\n      };\n    };\n\n    _this.handleCollision = function (collider) {\n      if (collider.object.name === \"Bird\") {\n        var rigidBody = collider.object.rigidBody;\n        GGame.instance.gameOver = true;\n        rigidBody.velocity = new Vector([rigidBody.velocity.x, 0]);\n        _this.runnerCollisionEvent = _this.collisionEvent(collider.object, new Vector([0, -rigidBody.weight * 9.82 * rigidBody.gravity]));\n        EventManager.instance.registerEvent(_this.runnerCollisionEvent);\n        rigidBody.acceleration = new Vector([rigidBody.acceleration.x, 0]);\n      }\n    };\n\n    _this.onCollisionEnd = function (collider) {\n      if (collider.object.name === \"Bird\") {\n        Game.instance.gameOver = true;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Floor, [{\n    key: \"beforeFrameRender\",\n    value: function beforeFrameRender() {\n      this.position.x = 0;\n    }\n  }]);\n\n  return Floor;\n}(GameComponent);\n\nexport default WithWorld(Floor);","map":{"version":3,"sources":["/Users/torkildjurhuus/Code/FlappyPuffin/src/Resources/Games/FlappyBird/GameComponents/Floor.js"],"names":["React","GameComponent","CollisionZone","Game","Vector","EventManager","WithWorld","Floor","children","props","dimensions","collisionEvent","gameObject","force","physics","handleCollision","collider","object","name","rigidBody","GGame","instance","gameOver","velocity","x","runnerCollisionEvent","weight","gravity","registerEvent","acceleration","onCollisionEnd","position"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,SAAT,QAA0B,iCAA1B;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,Q,GAAW,CAAC,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,MAAKC,KAAL,CAAWC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,C;;UAEXC,c,GAAiB,UAACC,UAAD,EAAaC,KAAb;AAAA,aAAwB;AACvCD,QAAAA,UAAU,EAAEA,UAD2B;AAEvCE,QAAAA,OAAO,EAAE;AAAED,UAAAA,KAAK,EAALA;AAAF;AAF8B,OAAxB;AAAA,K;;UAOjBE,e,GAAkB,UAAAC,QAAQ,EAAI;AAC5B,UAAIA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,KAAyB,MAA7B,EAAqC;AAAA,YAC3BC,SAD2B,GACbH,QAAQ,CAACC,MADI,CAC3BE,SAD2B;AAEnCC,QAAAA,KAAK,CAACC,QAAN,CAAeC,QAAf,GAA0B,IAA1B;AAEAH,QAAAA,SAAS,CAACI,QAAV,GAAqB,IAAInB,MAAJ,CAAW,CAACe,SAAS,CAACI,QAAV,CAAmBC,CAApB,EAAuB,CAAvB,CAAX,CAArB;AACA,cAAKC,oBAAL,GAA4B,MAAKd,cAAL,CAC1BK,QAAQ,CAACC,MADiB,EAE1B,IAAIb,MAAJ,CAAW,CAAC,CAAD,EAAI,CAACe,SAAS,CAACO,MAAX,GAAoB,IAApB,GAA2BP,SAAS,CAACQ,OAAzC,CAAX,CAF0B,CAA5B;AAIAtB,QAAAA,YAAY,CAACgB,QAAb,CAAsBO,aAAtB,CAAoC,MAAKH,oBAAzC;AACAN,QAAAA,SAAS,CAACU,YAAV,GAAyB,IAAIzB,MAAJ,CAAW,CAACe,SAAS,CAACU,YAAV,CAAuBL,CAAxB,EAA2B,CAA3B,CAAX,CAAzB;AACD;AACF,K;;UACDM,c,GAAiB,UAAAd,QAAQ,EAAI;AAC3B,UAAIA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,KAAyB,MAA7B,EAAqC;AACnCf,QAAAA,IAAI,CAACkB,QAAL,CAAcC,QAAd,GAAyB,IAAzB;AACD;AACF,K;;;;;;;wCACmB;AAClB,WAAKS,QAAL,CAAcP,CAAd,GAAkB,CAAlB;AACD;;;;EA/BiBvB,a;;AAkCpB,eAAeK,SAAS,CAACC,KAAD,CAAxB","sourcesContent":["import React from \"react\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Game from \"../Game\";\nimport Vector from \"../../../../Vector/Vector\";\nimport EventManager from \"../../../../EventManager/EventManager\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\n\nclass Floor extends GameComponent {\n  children = [<CollisionZone dimensions={this.props.dimensions} />];\n\n  collisionEvent = (gameObject, force) => ({\n    gameObject: gameObject,\n    physics: { force }\n  });\n\n  runnerCollisionEvent;\n\n  handleCollision = collider => {\n    if (collider.object.name === \"Bird\") {\n      const { rigidBody } = collider.object;\n      GGame.instance.gameOver = true;\n\n      rigidBody.velocity = new Vector([rigidBody.velocity.x, 0]);\n      this.runnerCollisionEvent = this.collisionEvent(\n        collider.object,\n        new Vector([0, -rigidBody.weight * 9.82 * rigidBody.gravity])\n      );\n      EventManager.instance.registerEvent(this.runnerCollisionEvent);\n      rigidBody.acceleration = new Vector([rigidBody.acceleration.x, 0]);\n    }\n  };\n  onCollisionEnd = collider => {\n    if (collider.object.name === \"Bird\") {\n      Game.instance.gameOver = true;\n    }\n  };\n  beforeFrameRender() {\n    this.position.x = 0;\n  }\n}\n\nexport default WithWorld(Floor);\n"]},"metadata":{},"sourceType":"module"}