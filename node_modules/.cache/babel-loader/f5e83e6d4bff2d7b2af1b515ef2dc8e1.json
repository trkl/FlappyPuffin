{"ast":null,"code":"import _classCallCheck from \"/Users/torkildjurhuus/Code/FlappyPuffin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torkildjurhuus/Code/FlappyPuffin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/torkildjurhuus/Code/FlappyPuffin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/torkildjurhuus/Code/FlappyPuffin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/torkildjurhuus/Code/FlappyPuffin/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/torkildjurhuus/Code/FlappyPuffin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/torkildjurhuus/Code/FlappyPuffin/src/Resources/Games/FlappyBird/GameComponents/Bird.js\";\nimport React from \"react\";\nimport WithKeyboardSubscribe from \"../../../../InputManager/HOC/WithKeyboardSubscribe\"; // import PropTypes from \"prop-types\";\n// import Game from \"./../Game\";\n\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\nimport Vector from \"../../../../Vector/Vector\";\nimport RigidBody from \"../../../../GameObject/RigidBody\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Sprite from \"../../../../Sprite/Sprite\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\n\nvar Bird =\n/*#__PURE__*/\nfunction (_GameComponent) {\n  _inherits(Bird, _GameComponent);\n\n  function Bird() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Bird);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Bird)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.children = [React.createElement(RigidBody, {\n      weight: 10,\n      velocity: _this.props.velocity,\n      force: _this.props.force,\n      gravity: _this.props.gravity,\n      drag: 0.5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(CollisionZone, {\n      offset: new Vector([0, 0]),\n      dimensions: new Vector([3.1, 7.1]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Sprite, {\n      position: new Vector([5, 30]),\n      scale: 0.13,\n      width: 1674,\n      height: 620,\n      n: 3,\n      imagesource: \"puffinpixel.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })];\n    return _this;\n  }\n\n  _createClass(Bird, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      _get(_getPrototypeOf(Bird.prototype), \"componentWillMount\", this).call(this);\n\n      if (this.props.controller) this.props.keyboardSubscribe(this, \" \", {\n        physics: {\n          force: new Vector([0, -2000]),\n          duration: 100\n        },\n        audio: {\n          soundName: \"sfx_wing.wav\"\n        }\n      });\n    }\n  }]);\n\n  return Bird;\n}(GameComponent); // Bird.propTypes = { cameraFollows: PropTypes.bool.isRequired };\n// Bird.defaultProps = { cameraFollows: false };\n\n\nexport default WithWorld(WithKeyboardSubscribe(Bird));","map":{"version":3,"sources":["/Users/torkildjurhuus/Code/FlappyPuffin/src/Resources/Games/FlappyBird/GameComponents/Bird.js"],"names":["React","WithKeyboardSubscribe","WithWorld","Vector","RigidBody","CollisionZone","Sprite","GameComponent","Bird","children","props","velocity","force","gravity","controller","keyboardSubscribe","physics","duration","audio","soundName"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,oDAAlC,C,CACA;AACA;;AACA,SAASC,SAAT,QAA0B,iCAA1B;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;;IAEMC,I;;;;;;;;;;;;;;;;;UASJC,Q,GAAW,CACT,oBAAC,SAAD;AACE,MAAA,MAAM,EAAE,EADV;AAEE,MAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWC,QAFvB;AAGE,MAAA,KAAK,EAAE,MAAKD,KAAL,CAAWE,KAHpB;AAIE,MAAA,OAAO,EAAE,MAAKF,KAAL,CAAWG,OAJtB;AAKE,MAAA,IAAI,EAAE,GALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,EAQT,oBAAC,aAAD;AACE,MAAA,MAAM,EAAE,IAAIV,MAAJ,CAAW,CAAC,CAAD,EAAI,CAAJ,CAAX,CADV;AAEE,MAAA,UAAU,EAAE,IAAIA,MAAJ,CAAW,CAAC,GAAD,EAAM,GAAN,CAAX,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARS,EAYT,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,IAAIA,MAAJ,CAAW,CAAC,CAAD,EAAI,EAAJ,CAAX,CADZ;AAEE,MAAA,KAAK,EAAE,IAFT;AAGE,MAAA,KAAK,EAAE,IAHT;AAIE,MAAA,MAAM,EAAE,GAJV;AAKE,MAAA,CAAC,EAAE,CALL;AAME,MAAA,WAAW,EAAC,iBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZS,C;;;;;;yCARU;AACnB;;AACA,UAAI,KAAKO,KAAL,CAAWI,UAAf,EACE,KAAKJ,KAAL,CAAWK,iBAAX,CAA6B,IAA7B,EAAmC,GAAnC,EAAwC;AACtCC,QAAAA,OAAO,EAAE;AAAEJ,UAAAA,KAAK,EAAE,IAAIT,MAAJ,CAAW,CAAC,CAAD,EAAI,CAAC,IAAL,CAAX,CAAT;AAAiCc,UAAAA,QAAQ,EAAE;AAA3C,SAD6B;AAEtCC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb;AAF+B,OAAxC;AAIH;;;;EARgBZ,a,GAgCnB;AACA;;;AAEA,eAAeL,SAAS,CAACD,qBAAqB,CAACO,IAAD,CAAtB,CAAxB","sourcesContent":["import React from \"react\";\nimport WithKeyboardSubscribe from \"../../../../InputManager/HOC/WithKeyboardSubscribe\";\n// import PropTypes from \"prop-types\";\n// import Game from \"./../Game\";\nimport { WithWorld } from \"../../../../World/HOC/WithWorld\";\n\nimport Vector from \"../../../../Vector/Vector\";\nimport RigidBody from \"../../../../GameObject/RigidBody\";\nimport CollisionZone from \"../../../../GameObject/CollisionZone\";\nimport Sprite from \"../../../../Sprite/Sprite\";\nimport GameComponent from \"../../../../GameObject/GameComponent\";\n\nclass Bird extends GameComponent {\n  componentWillMount() {\n    super.componentWillMount();\n    if (this.props.controller)\n      this.props.keyboardSubscribe(this, \" \", {\n        physics: { force: new Vector([0, -2000]), duration: 100 },\n        audio: { soundName: \"sfx_wing.wav\" }\n      });\n  }\n  children = [\n    <RigidBody\n      weight={10}\n      velocity={this.props.velocity}\n      force={this.props.force}\n      gravity={this.props.gravity}\n      drag={0.5}\n    />,\n    <CollisionZone\n      offset={new Vector([0, 0])}\n      dimensions={new Vector([3.1, 7.1])}\n    />,\n    <Sprite\n      position={new Vector([5, 30])}\n      scale={0.13}\n      width={1674}\n      height={620}\n      n={3}\n      imagesource=\"puffinpixel.png\"\n    />\n  ];\n}\n\n// Bird.propTypes = { cameraFollows: PropTypes.bool.isRequired };\n// Bird.defaultProps = { cameraFollows: false };\n\nexport default WithWorld(WithKeyboardSubscribe(Bird));\n"]},"metadata":{},"sourceType":"module"}